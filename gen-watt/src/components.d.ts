/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ICard, IOption, IUser, IWattChangeEvent } from "./components/idlog-product-configurator/interfaces";
export namespace Components {
    interface IdlogProductConfigurator {
        "apiUrl": string;
        "baseUrl": string;
        "configId": string;
        "crmId": string;
        "forceMobile": boolean;
        "isPreviewMode": boolean;
        "itemId": string;
        "memberId": string;
        "mode": string;
        "orgId": string;
        "roomId": string;
        "user": string;
    }
    interface IntakeForm {
        "isOpen": boolean;
        "user": IUser;
    }
    interface LivePreview {
        "assetBaseUrl": string;
        "color": string;
        "mode": string;
    }
    interface PricePreview {
    }
    interface TabAbout {
    }
    interface TabColors {
        "mode": string;
        "options": IOption[];
    }
    interface TabFuel {
        "options": IOption[];
    }
    interface TabWatts {
        "fuel": string;
        "options": IOption[];
    }
    interface TabsContainer {
        "cards": ICard[];
        "forceMobile": boolean;
        "fuel": string;
        "mode": string;
    }
}
declare global {
    interface HTMLIdlogProductConfiguratorElement extends Components.IdlogProductConfigurator, HTMLStencilElement {
    }
    var HTMLIdlogProductConfiguratorElement: {
        prototype: HTMLIdlogProductConfiguratorElement;
        new (): HTMLIdlogProductConfiguratorElement;
    };
    interface HTMLIntakeFormElement extends Components.IntakeForm, HTMLStencilElement {
    }
    var HTMLIntakeFormElement: {
        prototype: HTMLIntakeFormElement;
        new (): HTMLIntakeFormElement;
    };
    interface HTMLLivePreviewElement extends Components.LivePreview, HTMLStencilElement {
    }
    var HTMLLivePreviewElement: {
        prototype: HTMLLivePreviewElement;
        new (): HTMLLivePreviewElement;
    };
    interface HTMLPricePreviewElement extends Components.PricePreview, HTMLStencilElement {
    }
    var HTMLPricePreviewElement: {
        prototype: HTMLPricePreviewElement;
        new (): HTMLPricePreviewElement;
    };
    interface HTMLTabAboutElement extends Components.TabAbout, HTMLStencilElement {
    }
    var HTMLTabAboutElement: {
        prototype: HTMLTabAboutElement;
        new (): HTMLTabAboutElement;
    };
    interface HTMLTabColorsElement extends Components.TabColors, HTMLStencilElement {
    }
    var HTMLTabColorsElement: {
        prototype: HTMLTabColorsElement;
        new (): HTMLTabColorsElement;
    };
    interface HTMLTabFuelElement extends Components.TabFuel, HTMLStencilElement {
    }
    var HTMLTabFuelElement: {
        prototype: HTMLTabFuelElement;
        new (): HTMLTabFuelElement;
    };
    interface HTMLTabWattsElement extends Components.TabWatts, HTMLStencilElement {
    }
    var HTMLTabWattsElement: {
        prototype: HTMLTabWattsElement;
        new (): HTMLTabWattsElement;
    };
    interface HTMLTabsContainerElement extends Components.TabsContainer, HTMLStencilElement {
    }
    var HTMLTabsContainerElement: {
        prototype: HTMLTabsContainerElement;
        new (): HTMLTabsContainerElement;
    };
    interface HTMLElementTagNameMap {
        "idlog-product-configurator": HTMLIdlogProductConfiguratorElement;
        "intake-form": HTMLIntakeFormElement;
        "live-preview": HTMLLivePreviewElement;
        "price-preview": HTMLPricePreviewElement;
        "tab-about": HTMLTabAboutElement;
        "tab-colors": HTMLTabColorsElement;
        "tab-fuel": HTMLTabFuelElement;
        "tab-watts": HTMLTabWattsElement;
        "tabs-container": HTMLTabsContainerElement;
    }
}
declare namespace LocalJSX {
    interface IdlogProductConfigurator {
        "apiUrl"?: string;
        "baseUrl"?: string;
        "configId"?: string;
        "crmId"?: string;
        "forceMobile"?: boolean;
        "isPreviewMode"?: boolean;
        "itemId"?: string;
        "memberId"?: string;
        "mode"?: string;
        "orgId"?: string;
        "roomId"?: string;
        "user"?: string;
    }
    interface IntakeForm {
        "isOpen"?: boolean;
        "onRequestHide"?: (event: CustomEvent<any>) => void;
        "onRequestSave"?: (event: CustomEvent<IUser>) => void;
        "user"?: IUser;
    }
    interface LivePreview {
        "assetBaseUrl"?: string;
        "color"?: string;
        "mode"?: string;
    }
    interface PricePreview {
    }
    interface TabAbout {
    }
    interface TabColors {
        "mode"?: string;
        "onColorChange"?: (event: CustomEvent<string>) => void;
        "options"?: IOption[];
    }
    interface TabFuel {
        "onFuelChange"?: (event: CustomEvent<string>) => void;
        "options"?: IOption[];
    }
    interface TabWatts {
        "fuel"?: string;
        "onWattsChange"?: (event: CustomEvent<IWattChangeEvent>) => void;
        "options"?: IOption[];
    }
    interface TabsContainer {
        "cards"?: ICard[];
        "forceMobile"?: boolean;
        "fuel"?: string;
        "mode"?: string;
    }
    interface IntrinsicElements {
        "idlog-product-configurator": IdlogProductConfigurator;
        "intake-form": IntakeForm;
        "live-preview": LivePreview;
        "price-preview": PricePreview;
        "tab-about": TabAbout;
        "tab-colors": TabColors;
        "tab-fuel": TabFuel;
        "tab-watts": TabWatts;
        "tabs-container": TabsContainer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "idlog-product-configurator": LocalJSX.IdlogProductConfigurator & JSXBase.HTMLAttributes<HTMLIdlogProductConfiguratorElement>;
            "intake-form": LocalJSX.IntakeForm & JSXBase.HTMLAttributes<HTMLIntakeFormElement>;
            "live-preview": LocalJSX.LivePreview & JSXBase.HTMLAttributes<HTMLLivePreviewElement>;
            "price-preview": LocalJSX.PricePreview & JSXBase.HTMLAttributes<HTMLPricePreviewElement>;
            "tab-about": LocalJSX.TabAbout & JSXBase.HTMLAttributes<HTMLTabAboutElement>;
            "tab-colors": LocalJSX.TabColors & JSXBase.HTMLAttributes<HTMLTabColorsElement>;
            "tab-fuel": LocalJSX.TabFuel & JSXBase.HTMLAttributes<HTMLTabFuelElement>;
            "tab-watts": LocalJSX.TabWatts & JSXBase.HTMLAttributes<HTMLTabWattsElement>;
            "tabs-container": LocalJSX.TabsContainer & JSXBase.HTMLAttributes<HTMLTabsContainerElement>;
        }
    }
}
